{"version":3,"sources":["serviceWorker.js","constants/action-state-types.js","reducers/registerUser.js","reducers/result.js","reducers/index.js","actions/user/user-action.js","components/user/user-register.js","App.js","constants/appConstants.js","components/game/player-details.js","components/board/Square.js","components/board/board.js","actions/result/result-action.js","components/game/game.js","components/result/game-result.js","index.js"],"names":["Boolean","window","location","hostname","match","actionTypes","initialState","user","player","rootReducer","combineReducers","registerUser","state","action","type","payload","result","addUser","props","player1","player2","dispatch","users","saveUsers","user1","user2","push","UserForm","useDispatch","history","useHistory","useState","setPlayer1Value","setPlayer2Value","useEffect","console","log","className","onSubmit","e","preventDefault","Input","name","id","placeholder","onChange","target","value","Button","disabled","App","CONSTANTS","PlayerDetails","useSelector","winGameStep","winState","trun","style","left","color","border","map","i","key","winCount","Square","matrix","gameStepWinMatrix","idx","onClick","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","winner","winnerGameStep","Board","winStateP1","winStateP2","rowArray","columns","squares","forEach","sq","renderSquare","content","setResult","saveResult","calculateWinner","returnObj","matchedMatrix","matchMatrix","length","el1","el2","el3","Game","Array","fill","boardMatrix","setMetrix","isXNext","setNext","player1winCount","setPlayer1WinCount","player2winCount","setPlayer2WinCount","player1WinState","setPlayer1WinState","player2WinState","setPlayer2WinState","gameStepWinState","setGameStepWinState","setGameStepWinMatrix","clearGame","slice","winnerResult","some","el","setTimeout","handleClick","Result","height","width","padding","backgroundColor","borderRadius","store","createStore","applyMiddleware","thunk","AppContainer","basename","pathname","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4253e17c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const actionTypes = {\r\n    REGISTER_USER: 'USER_DETAILS_SAVE',\r\n    SAVE_RESULT: 'SAVE_RESULT',\r\n}\r\n\r\n","import { actionTypes } from '../constants/action-state-types';\r\n\r\nconst initialState = {\r\n    user: {}\r\n};\r\n\r\nexport const registerUser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.REGISTER_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { actionTypes } from '../constants/action-state-types';\r\n\r\nconst initialState = {\r\n    player: ''\r\n};\r\n\r\nexport const result = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SAVE_RESULT:\r\n            return {\r\n                ...state,\r\n                player: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { registerUser } from './registerUser';\r\nimport { result } from './result';\r\n\r\nexport const rootReducer = combineReducers({ registerUser, result });","import { actionTypes } from '../../constants/action-state-types';\r\n\r\nexport const addUser = (props, player1, player2) => {\r\n    return dispatch => {\r\n        let users = {\r\n            user1: player1,\r\n            user2: player2\r\n        };\r\n        dispatch(saveUsers(users));\r\n        props.push('/game');\r\n    };\r\n};\r\n\r\nexport function saveUsers(users) {\r\n    return {\r\n        type: actionTypes.REGISTER_USER,\r\n        payload: users\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Input } from 'reactstrap';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\n// Actions\r\nimport { addUser } from '../../actions/user/user-action';\r\n\r\n// css\r\nimport '../../css/user.css';\r\n\r\nfunction UserForm() {\r\n    const dispatch = useDispatch(),\r\n        history = useHistory(),\r\n        [player1, setPlayer1Value] = useState(''),\r\n        [player2, setPlayer2Value] = useState(''),\r\n\r\n        handleSubmit = e => {\r\n            e.preventDefault();\r\n            dispatch(addUser(history, player1, player2))\r\n        }\r\n\r\n    // First Time F-Component is mounted \r\n    useEffect(() => {\r\n        console.log(\"UserForm Component is mounted 1st Time\");\r\n    }, [])\r\n\r\n    // Runs on every update - no argument\r\n    useEffect(() => {\r\n        console.log(\"UserForm Component- Update\");\r\n    })\r\n\r\n    return (\r\n        <div className=\"user-form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"header-text\">\r\n                    Welcome to <span>TIC TAC TOE</span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div>PLAYER 1</div>\r\n                    <Input className=\"form-control\"\r\n                        name=\"player1\"\r\n                        id=\"p1\"\r\n                        placeholder=\"Player 1\"\r\n                        onChange={e => setPlayer1Value(e.target.value)} ></Input>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div>PLAYER 2</div>\r\n                    <Input className=\"form-control\"\r\n                        name=\"player2\"\r\n                        id=\"p2\"\r\n                        placeholder=\"Player 2\"\r\n                        onChange={e => setPlayer2Value(e.target.value)}></Input>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <Button className=\"btn btn-style btn-secondary btn-lg btn-block\"\r\n                        disabled={player1 === '' || player2 === ''}>\r\n                        Continue</Button>\r\n                </div>\r\n            </form>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UserForm;","import React from 'react';\n\n// import UserForm \nimport UserForm from './components/user/user-register';\n\n// css\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <UserForm></UserForm>\n  );\n}\n\nexport default App;\n","export const CONSTANTS = {\r\n    WINNER: 'WINNER',\r\n    DRAW: 'DRAW',\r\n    X: 'X',\r\n    O: 'O'\r\n}\r\n","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\n// constants\r\nimport { CONSTANTS } from '../../constants/appConstants';\r\n\r\nfunction PlayerDetails(props) {\r\n    const user = useSelector((state) => state.registerUser.user),\r\n        player = props.player,\r\n        winCountArray = [0, 1, 2, 3, 4, 5];\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.winGameStep === CONSTANTS.DRAW ?\r\n                    null\r\n                    :\r\n                    props.winState === null ?\r\n                        props.trun ?\r\n                            <div className=\"player1-turn-text\" style={{ left: '13.5%' }}> Your Turn </div>\r\n                            :\r\n                            <div className=\"player2-turn-text\"> Your Turn </div>\r\n                        :\r\n                        props.winState === CONSTANTS.DRAW ?\r\n                            <div className={player === CONSTANTS.X ? \"player1-turn-text\" : \"player2-turn-text\"}\r\n                                style={player === CONSTANTS.X ? { color: '#ffffff', left: '14.5%' }\r\n                                    : { color: '#ffffff' }} > DRAW </div>\r\n                            :\r\n                            props.winState === CONSTANTS.WINNER ?\r\n                                <div className={player === CONSTANTS.X ? \"player1-turn-text\" : \"player2-turn-text\"}\r\n                                    style={player === CONSTANTS.X ? { left: '13.5%' } : null}> WINNER </div>\r\n                                :\r\n                                null\r\n            }\r\n            <div className={player === CONSTANTS.X ? \"player1-stat\" : \"player2-stat\"}\r\n                style={(props.winState === CONSTANTS.WINNER || props.winState === CONSTANTS.DRAW) ?\r\n                    { border: '2px solid #fb9e01' } : null}>\r\n                <div className=\"player-head\">\r\n                    PLAYER 1\r\n                </div>\r\n                <div className=\"player-name\">\r\n                    {\r\n                        player === CONSTANTS.X ?\r\n                            user.user1\r\n                            :\r\n                            user.user2\r\n                    }\r\n                </div>\r\n                <div className=\"player-symbol\">\r\n                    {\r\n                        player === CONSTANTS.X ?\r\n                            <span>X</span>\r\n                            :\r\n                            <span>O</span>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={player === CONSTANTS.X ? \"player1-win-count\" : \"player2-win-count\"}>\r\n                {\r\n                    winCountArray.map((i) => {\r\n                        return <span key={i} className={props.winCount > i ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                    })\r\n\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default PlayerDetails;","import React from 'react'\n\nexport default function Square(props) {    \n    const matrix = props.gameStepWinMatrix === null ? [] : props.gameStepWinMatrix,\n        id = props.idx;\n    return (\n        <button className=\"square\"\n            onClick={props.onClick}\n            style={id === 0 ? { borderTopLeftRadius: '25px' }\n                : id === 2 ? { borderTopRightRadius: '25px' }\n                    : id === 6 ? { borderBottomLeftRadius: '25px' }\n                        : id === 8 ? { borderBottomRightRadius: '25px' }\n                            : null}>\n            {\n                (props.winner === 'X' || props.winnerGameStep === 'X') && props.value === 'X' &&\n                    (id === matrix[0] || id === matrix[1] || id === matrix[2]) ?\n                    <span style={{ color: '#fb9e01' }}>{props.value} </span>\n                    :\n                    (props.winner === 'O' || props.winnerGameStep === 'O') && props.value === 'O' &&\n                        (id === matrix[0] || id === matrix[1] || id === matrix[2]) ?\n                        <span style={{ color: '#fb9e01' }}>{props.value} </span>\n                        :\n                        <span >{props.value} </span>\n            }\n\n        </button>\n    )\n}\n","import React from 'react';\r\n\r\n// import custom components\r\nimport Square from './Square';\r\n\r\n// constants\r\nimport { CONSTANTS } from '../../constants/appConstants';\r\n//import css\r\nimport \"../../css/board.css\";\r\n\r\nfunction Board(props) {\r\n    const winner = props.winStateP1 === CONSTANTS.WINNER ? CONSTANTS.X\r\n        : props.winStateP2 === CONSTANTS.WINNER ? CONSTANTS.O\r\n            : null,\r\n        winnerGameStep = props.winGameStep,\r\n        renderSquare = (i) => {\r\n            return <Square\r\n                idx={i}\r\n                value={props.squares[i]}\r\n                onClick={() => props.onClick(i)}\r\n                winner={winner}\r\n                winnerGameStep={winnerGameStep}\r\n                gameStepWinMatrix={props.gameStepWinMatrix}>\r\n            </Square >\r\n        }\r\n\r\n    const content = () => {\r\n        let rowArray = [], columns = [];\r\n        props.squares.forEach((sq, i) => {\r\n            // prepare the array\r\n            columns.push(\r\n                <div key={i} className=\"col-md-4\">\r\n                    {renderSquare(i)}\r\n                </div>\r\n            );\r\n            // after three items add a new row \r\n            if ((i + 1) % 3 === 0) {\r\n                rowArray.push(<div key={i} className=\"row\">{columns}</div>);\r\n                columns = [];\r\n            }\r\n        });\r\n\r\n        return rowArray;\r\n    };\r\n\r\n    return (\r\n        <div className=\"square-matrix\">\r\n            <div className=\"square-bord\">\r\n                {content()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;\r\n","import { actionTypes } from '../../constants/action-state-types';\r\n\r\nexport const setResult = (props, result) => {\r\n    return dispatch => {\r\n        let player = result;\r\n        dispatch(saveResult(player));\r\n        props.push('/result');\r\n    };\r\n};\r\n\r\nexport function saveResult(player) {\r\n    return {\r\n        type: actionTypes.SAVE_RESULT,\r\n        payload: player\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\n// custom component\r\nimport PlayerDetails from './player-details';\r\nimport Board from '../board/board';\r\n\r\n// constants\r\nimport { CONSTANTS } from '../../constants/appConstants';\r\n\r\n// import actions\r\nimport { setResult } from '../../actions/result/result-action';\r\n\r\n// css\r\nimport '../../css/game.css'\r\n\r\nfunction Game() {\r\n    const dispatch = useDispatch(),\r\n        history = useHistory(),\r\n        [boardMatrix, setMetrix] = useState(Array(9).fill(null)),\r\n        [isXNext, setNext] = useState(true),\r\n        [player1winCount, setPlayer1WinCount] = useState(0),\r\n        [player2winCount, setPlayer2WinCount] = useState(0),\r\n        [player1WinState, setPlayer1WinState] = useState(null),\r\n        [player2WinState, setPlayer2WinState] = useState(null),\r\n        [gameStepWinState, setGameStepWinState] = useState(null),\r\n        [gameStepWinMatrix, setGameStepWinMatrix] = useState(null),\r\n        maxGameCount = 6,\r\n\r\n        handleClick = (i) => {\r\n            const squares = boardMatrix.slice(),\r\n                winnerResult = calculateWinner(squares),\r\n                { winner } = winnerResult === null ? { winner: null } : winnerResult;\r\n            // chek for not rep \r\n            if (winner || squares[i] !== null) {\r\n                return\r\n            }\r\n            squares[i] = isXNext ? 'X' : 'O';\r\n            setMetrix(squares);\r\n            setNext(!isXNext);\r\n        },\r\n\r\n        clearGame = () => {\r\n            setMetrix(Array(9).fill(null));\r\n            setNext(true);\r\n            setGameStepWinState(null)\r\n        }\r\n\r\n    // runs on every update of Game - step\r\n    useEffect(() => {\r\n        // check if there is a winner with best of 6 \r\n        if ((player1winCount !== 0 || player2winCount !== 0) &&\r\n            (player1winCount === maxGameCount || player2winCount === maxGameCount)) {\r\n\r\n            if (player1winCount === player2winCount) {\r\n                // navigate \r\n                setGameStepWinState('');\r\n                setPlayer1WinState(CONSTANTS.DRAW);\r\n                setPlayer2WinState(CONSTANTS.DRAW);\r\n                setNext('');\r\n            }\r\n            else if (player1winCount > player2winCount) {\r\n                setPlayer1WinState(CONSTANTS.WINNER);\r\n                setNext('');\r\n                // navigate to Winner Page\r\n                setTimeout(() => {\r\n                    dispatch(setResult(history, CONSTANTS.X));\r\n                }, 2000);\r\n            }\r\n            else if (player2winCount > player1winCount) {\r\n                setPlayer2WinState(CONSTANTS.WINNER);\r\n                setNext('');\r\n                // navigate to Winner Page\r\n                setTimeout(() => {\r\n                    dispatch(setResult(history, CONSTANTS.O));\r\n                }, 2000);\r\n            }\r\n        }\r\n        // Freez the game\r\n        else if ((player1winCount !== 0 || player2winCount !== 0) &&\r\n            (player1winCount === maxGameCount || player2winCount === maxGameCount)) {\r\n\r\n        }\r\n        else if (gameStepWinState === null) {\r\n            const squares = boardMatrix.slice(),\r\n                winnerResult = calculateWinner(squares),\r\n                { winner, matchedMatrix } = winnerResult === null ? { winner: null, matchedMatrix: null } : winnerResult;\r\n\r\n            if (winner === null) {\r\n                const result = squares.some(el => el === null);\r\n                // Draw case\r\n                if (!result) {\r\n                    setGameStepWinState(CONSTANTS.DRAW);\r\n                    setGameStepWinMatrix(null);\r\n                    if ((player2winCount + 1) || (player2winCount + 1) !== maxGameCount) {\r\n                        setTimeout(() => {\r\n                            clearGame();\r\n                        }, 3000);\r\n                    }\r\n                }\r\n            }\r\n            else if (winner !== null) {\r\n                // Player 1 - win case\r\n                if (winner === CONSTANTS.X) {\r\n                    setGameStepWinState(winner);\r\n                    setGameStepWinMatrix(matchedMatrix);\r\n                    setPlayer1WinCount(player1winCount + 1);\r\n                    if ((player1winCount + 1) !== maxGameCount) {\r\n                        setTimeout(() => {\r\n                            clearGame();\r\n                        }, 3000);\r\n                    }\r\n                }\r\n                // player 2 win case\r\n                else if (winner === CONSTANTS.O) {\r\n                    setGameStepWinState(winner);\r\n                    setGameStepWinMatrix(matchedMatrix);\r\n                    setPlayer2WinCount(player2winCount + 1);\r\n                    if ((player2winCount + 1) !== maxGameCount) {\r\n                        setTimeout(() => {\r\n                            clearGame();\r\n                        }, 3000);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <PlayerDetails\r\n                player={CONSTANTS.X}\r\n                trun={isXNext}\r\n                winCount={player1winCount}\r\n                winState={player1WinState}\r\n                winGameStep={gameStepWinState}\r\n            />\r\n            <Board onClick={(i) => handleClick(i)}\r\n                squares={boardMatrix}\r\n                winStateP1={player1WinState}\r\n                winStateP2={player2WinState}\r\n                winGameStep={gameStepWinState}\r\n                gameStepWinMatrix={gameStepWinMatrix}>\r\n            </Board>\r\n            <PlayerDetails\r\n                player={CONSTANTS.O}\r\n                trun={isXNext}\r\n                winCount={player2winCount}\r\n                winState={player2WinState}\r\n                winGameStep={gameStepWinState}\r\n            />\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n// | 0 | 1 | 2 |\r\n// | 3 | 4 | 5 |\r\n// | 6 | 7 | 8 |\r\n\r\nfunction calculateWinner(squares) {\r\n    let returnObj = {\r\n        winner: '',\r\n        matchedMatrix: []\r\n    }\r\n    const matchMatrix = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n\r\n    for (let i = 0; i < matchMatrix.length; i++) {\r\n        const [el1, el2, el3] = matchMatrix[i];\r\n        if (squares[el1] && squares[el1] === squares[el2] && squares[el2] === squares[el3]) {\r\n            returnObj.winner = squares[el1];\r\n            returnObj.matchedMatrix = matchMatrix[i];\r\n            return returnObj;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Game;","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n// constants\r\nimport { CONSTANTS } from '../../constants/appConstants';\r\n\r\n// import css\r\nimport \"../../css/board.css\";\r\nimport \"../../css/result.css\";\r\n\r\nexport default function Result() {\r\n    const result = useSelector((state) => state.result.player),\r\n        user = useSelector((state) => state.registerUser.user);\r\n    // console.log(\"result\", result);\r\n\r\n    return (\r\n        <div className=\"square-matrix\" style={{ height: \"40%\", width: \"20%\", padding: '12px' }}>\r\n            <div className=\"square-bord\" style={{ backgroundColor: '#253952', height: '36vh', borderRadius: '36px' }}>\r\n                <div className=\"result\">\r\n                    <div className=\"caption\">\r\n                        WINNER!\r\n                    </div>\r\n                    <div className=\"center-box\">\r\n                        <div className=\"player-id\">\r\n                            {\r\n                                result === CONSTANTS.X ?\r\n                                    <span>Player 1</span>\r\n                                    :\r\n                                    <span>Player 2</span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"player-name\">\r\n                            {\r\n                                result === CONSTANTS.X ?\r\n                                    <div>{user.user1}</div>\r\n                                    :\r\n                                    <div>{user.user2}</div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"symbol\">\r\n                            {\r\n                                result === CONSTANTS.X ?\r\n                                    <div>X</div>\r\n                                    :\r\n                                    <div>O</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers/index';\n\n// Custom components \nimport App from './App';\nimport Game from './components/game/game';\nimport Result from './components/result/game-result';\n\n// import css\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nfunction AppContainer() {\n  return (\n    <Router basename={window.location.pathname || ''}>\n      <div className=\"home-page\">\n        <header className=\"app-text\">\n          <div>T I C </div>\n          <div>T A C</div>\n          <div>T O E </div>\n        </header>\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/game\" component={Game} />\n        <Route exact path=\"/result\" component={Result} />\n      </div>\n    </Router >\n  )\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}