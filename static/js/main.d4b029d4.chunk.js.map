{"version":3,"sources":["serviceWorker.js","constants/action-state-types.js","reducers/registerUser.js","reducers/result.js","reducers/index.js","actions/user/user-action.js","components/user/user-register.js","App.js","components/game/player1-details.js","components/game/player2-details.js","components/board/Square.js","components/board/bord.js","actions/result/result-action.js","components/game/game.js","components/result/game-result.js","index.js"],"names":["Boolean","window","location","hostname","match","actionTypes","initialState","user","player","rootReducer","combineReducers","registerUser","state","action","type","payload","result","addUser","props","player1","player2","dispatch","users","saveUsers","user1","user2","push","UserForm","useDispatch","history","useHistory","useState","setPlayer1Value","setPlayer2Value","className","onSubmit","e","preventDefault","Input","name","id","placeholder","onChange","target","value","Button","disabled","App","Player1Details","winGameStep","winState","trun","style","left","color","border","winCount","Player2Details","Square","matrix","gameStepWinMatrix","idx","onClick","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","winner","winnerGameStep","Board","winStateP1","winStateP2","renderSquare","i","squres","gameCount","setResult","saveResult","calculateWinner","squares","returnObj","matchedMatrix","matchMatrix","length","el1","el2","el3","Game","useSelector","Array","fill","boardMatrix","setMetrix","isXNext","setNext","setGameCount","player1winCount","setPlayer1WinCount","player2winCount","setPlayer2WinCount","player1WinState","setPlayer1WinState","player2WinState","setPlayer2WinState","gameStepWinState","setGameStepWinState","setGameStepWinMatrix","clearGame","setTimeout","slice","winnerResult","some","el","handleClick","Result","console","log","height","width","padding","backgroundColor","borderRadius","toUpperCase","store","createStore","applyMiddleware","thunk","AppContainer","basename","pathname","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+TAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kDClBOC,EACM,oBADNA,EAEI,cCAXC,EAAe,CACjBC,KAAM,ICDJD,EAAe,CACjBE,OAAQ,ICCCC,EAAcC,YAAgB,CAAEC,aFEjB,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCAC1D,OAAQA,EAAOC,MACX,KAAKT,EACD,OAAO,2BACAO,GADP,IAEIL,KAAMM,EAAOE,UAErB,QACI,OAAOH,IEVwCI,ODErC,WAAmC,IAAlCJ,EAAiC,uDAAzBN,EAAcO,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKT,EACD,OAAO,2BACAO,GADP,IAEIJ,OAAQK,EAAOE,UAEvB,QACI,OAAOH,M,uBEZNK,EAAU,SAACC,EAAOC,EAASC,GACpC,OAAO,SAAAC,GAKHA,EAKD,SAAmBC,GACtB,MAAO,CACHR,KAAMT,EACNU,QAASO,GARAC,CAJG,CACRC,MAAOL,EACPM,MAAOL,KAGXF,EAAMQ,KAAK,W,MC+CJC,MA5Cf,WACU,IAAAN,EAAWO,cACbC,EAAUC,cADR,EAE2BC,mBAAS,IAFpC,mBAEDZ,EAFC,KAEQa,EAFR,OAG2BD,mBAAS,IAHpC,mBAGDX,EAHC,KAGQa,EAHR,KAUN,OACI,yBAAKC,UAAU,aACX,0BAAMC,SAPK,SAAAC,GACXA,EAAEC,iBACFhB,EAASJ,EAAQY,EAASV,EAASC,MAM/B,yBAAKc,UAAU,eAAf,cACe,8CAEf,yBAAKA,UAAU,cACX,yCACA,kBAACI,EAAA,EAAD,CAAOJ,UAAU,eACbK,KAAK,UACLC,GAAG,KACHC,YAAY,WACZC,SAAU,SAAAN,GAAC,OAAIJ,EAAgBI,EAAEO,OAAOC,WAEhD,yBAAKV,UAAU,cACX,yCACA,kBAACI,EAAA,EAAD,CAAOJ,UAAU,eACbK,KAAK,UACLC,GAAG,KACHC,YAAY,WACZC,SAAU,SAAAN,GAAC,OAAIH,EAAgBG,EAAEO,OAAOC,WAGhD,yBAAKV,UAAU,cACX,kBAACW,EAAA,EAAD,CAAQX,UAAU,+CACdY,SAAsB,KAAZ3B,GAA8B,KAAZC,GADhC,gB,MChCL2B,MANf,WACE,OACE,kBAAC,EAAD,OCqCWC,MA9Cf,SAAwB9B,GACpB,OACI,6BAE8B,SAAtBA,EAAM+B,YACF,KAEmB,OAAnB/B,EAAMgC,SACFhC,EAAMiC,KACF,yBAAKjB,UAAU,oBAAoBkB,MAAO,CAACC,KAAM,UAAjD,eAEA,KAEe,SAAnBnC,EAAMgC,SACF,yBAAKhB,UAAU,oBAAoBkB,MAAO,CAAEE,MAAO,UAAWD,KAAM,UAApE,UAEmB,WAAnBnC,EAAMgC,SACF,yBAAKhB,UAAU,oBAAoBkB,MAAO,CAACC,KAAM,UAAjD,YAEA,KAGpB,yBAAKnB,UAAU,eACXkB,MAA2B,WAAnBlC,EAAMgC,UAA4C,SAAnBhC,EAAMgC,SAAuB,CAAEK,OAAQ,qBAAwB,MACtG,yBAAKrB,UAAU,eAAf,YAGA,yBAAKA,UAAU,eACVhB,EAAMX,MAEX,yBAAK2B,UAAU,iBAAf,MAIJ,yBAAKA,UAAU,qBACX,0BAAMA,UAAWhB,EAAMsC,SAAW,EAAI,eAAiB,iBAAvD,UACA,0BAAMtB,UAAWhB,EAAMsC,SAAW,EAAI,eAAiB,iBAAvD,UACA,0BAAMtB,UAAWhB,EAAMsC,SAAW,EAAI,eAAiB,iBAAvD,UACA,0BAAMtB,UAAWhB,EAAMsC,SAAW,EAAI,eAAiB,iBAAvD,UACA,0BAAMtB,UAAWhB,EAAMsC,SAAW,EAAI,eAAiB,iBAAvD,UACA,0BAAMtB,UAAWhB,EAAMsC,SAAW,EAAI,eAAiB,iBAAvD,aCKDC,MA7Cf,SAAwBvC,GACpB,OACI,6BAE8B,SAAtBA,EAAM+B,YACF,KAEmB,OAAnB/B,EAAMgC,SACFhC,EAAMiC,KACF,KAEA,yBAAKjB,UAAU,qBAAf,eAEe,SAAnBhB,EAAMgC,SACF,yBAAKhB,UAAU,oBAAoBkB,MAAO,CAAEE,MAAO,YAAnD,UAEmB,WAAnBpC,EAAMgC,SACF,yBAAKhB,UAAU,qBAAf,YAEA,KAEpB,yBAAKA,UAAU,eACXkB,MAA2B,WAAnBlC,EAAMgC,UAA4C,SAAnBhC,EAAMgC,SAAuB,CAAEK,OAAQ,qBAAwB,MACtG,yBAAKrB,UAAU,eAAf,YAGA,yBAAKA,UAAU,eACVhB,EAAMX,MAEX,yBAAK2B,UAAU,iBAAf,MAIJ,yBAAKA,UAAU,qBACX,0BAAMA,UAAWhB,EAAMsC,SAAW,EAAI,eAAiB,iBAAvD,UACA,0BAAMtB,UAAWhB,EAAMsC,SAAW,EAAI,eAAiB,iBAAvD,UACA,0BAAMtB,UAAWhB,EAAMsC,SAAW,EAAI,eAAiB,iBAAvD,UACA,0BAAMtB,UAAWhB,EAAMsC,SAAW,EAAI,eAAiB,iBAAvD,UACA,0BAAMtB,UAAWhB,EAAMsC,SAAW,EAAI,eAAiB,iBAAvD,UACA,0BAAMtB,UAAWhB,EAAMsC,SAAW,EAAI,eAAiB,iBAAvD,aCvCD,SAASE,EAAOxC,GAC3B,IAAMyC,EAAqC,OAA5BzC,EAAM0C,kBAA6B,GAAK1C,EAAM0C,kBACzDpB,EAAKtB,EAAM2C,IACf,OACI,4BAAQ3B,UAAU,SACd4B,QAAS5C,EAAM4C,QACfV,MAAc,IAAPZ,EAAW,CAAEuB,oBAAqB,QAC5B,IAAPvB,EAAW,CAAEwB,qBAAsB,QACxB,IAAPxB,EAAW,CAAEyB,uBAAwB,QAC1B,IAAPzB,EAAW,CAAE0B,wBAAyB,QAClC,OAEI,MAAjBhD,EAAMiD,QAA2C,MAAzBjD,EAAMkD,gBAA2C,MAAhBlD,EAAM0B,OAC3DJ,IAAOmB,EAAO,IAAMnB,IAAOmB,EAAO,IAAMnB,IAAOmB,EAAO,MAGrC,MAAjBzC,EAAMiD,QAA2C,MAAzBjD,EAAMkD,gBAA2C,MAAhBlD,EAAM0B,OAC3DJ,IAAOmB,EAAO,IAAMnB,IAAOmB,EAAO,IAAMnB,IAAOmB,EAAO,IAGvD,8BAAQzC,EAAM0B,MAAd,KANJ,0BAAMQ,MAAO,CAAEE,MAAO,YAAcpC,EAAM0B,MAA1C,M,MCwDLyB,MA/Df,SAAenD,GACX,IAAMiD,EAA8B,WAArBjD,EAAMoD,WAA0B,IAA2B,WAArBpD,EAAMqD,WAA0B,IAAM,KACvFH,EAAiBlD,EAAM+B,YACvBuB,EAAe,SAACC,GACZ,OAAO,kBAACf,EAAD,CACHG,IAAKY,EACL7B,MAAO1B,EAAMwD,OAAOD,GACpBX,QAAS,kBAAM5C,EAAM4C,QAAQW,IAC7BN,OAAQA,EACRC,eAAgBA,EAChBR,kBAAmB1C,EAAM0C,qBAIrC,OACI,yBAAK1B,UAAU,iBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACVsC,EAAa,IAElB,yBAAKtC,UAAU,YACVsC,EAAa,IAElB,yBAAKtC,UAAU,YACVsC,EAAa,KAGtB,yBAAKtC,UAAU,OACX,yBAAKA,UAAU,YACVsC,EAAa,IAElB,yBAAKtC,UAAU,YACVsC,EAAa,IAElB,yBAAKtC,UAAU,YACVsC,EAAa,KAGtB,yBAAKtC,UAAU,OACX,yBAAKA,UAAU,YACVsC,EAAa,IAElB,yBAAKtC,UAAU,YACVsC,EAAa,IAElB,yBAAKtC,UAAU,YACVsC,EAAa,MAI1B,yBAAKtC,UAAU,oBACX,0BAAMA,UAAWhB,EAAMyD,UAAY,GAAyB,OAApBzD,EAAMyD,UAAqB,eAAiB,iBAApF,UACA,0BAAMzC,UAAWhB,EAAMyD,UAAY,GAAyB,OAApBzD,EAAMyD,UAAqB,eAAiB,iBAApF,UACA,0BAAMzC,UAAWhB,EAAMyD,UAAY,GAAyB,OAApBzD,EAAMyD,UAAqB,eAAiB,iBAApF,UACA,0BAAMzC,UAAWhB,EAAMyD,UAAY,GAAyB,OAApBzD,EAAMyD,UAAqB,eAAiB,iBAApF,UACA,0BAAMzC,UAAWhB,EAAMyD,UAAY,GAAyB,OAApBzD,EAAMyD,UAAqB,eAAiB,iBAApF,UACA,0BAAMzC,UAAWhB,EAAMyD,UAAY,GAAyB,OAApBzD,EAAMyD,UAAqB,eAAiB,iBAApF,aChEHC,EAAY,SAAC1D,EAAOF,GAC7B,OAAO,SAAAK,GAEHA,EAKD,SAAoBb,GACvB,MAAO,CACHM,KAAMT,EACNU,QAASP,GARAqE,CADI7D,IAEbE,EAAMQ,KAAK,a,MC2JnB,SAASoD,EAAgBC,GAkBrB,IAjBA,IAAIC,EAAY,CACZb,OAAQ,GACRc,cAAe,IAEbC,EAAc,CAChB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GAEP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GAEP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGFT,EAAI,EAAGA,EAAIS,EAAYC,OAAQV,IAAK,CAAC,IAAD,cACjBS,EAAYT,GADK,GAClCW,EADkC,KAC7BC,EAD6B,KACxBC,EADwB,KAEzC,GAAIP,EAAQK,IAAQL,EAAQK,KAASL,EAAQM,IAAQN,EAAQM,KAASN,EAAQO,GAG1E,OAFAN,EAAUb,OAASY,EAAQK,GAC3BJ,EAAUC,cAAgBC,EAAYT,GAC/BO,EAGf,OAAO,KAGIO,MA9Kf,WACU,IAAAhF,EAAOiF,aAAY,SAAC5E,GAAD,OAAWA,EAAMD,aAAaJ,QACnDc,EAAWO,cACXC,EAAUC,cAFR,EAGyBC,mBAAS0D,MAAM,GAAGC,KAAK,OAHhD,mBAGDC,EAHC,KAGYC,EAHZ,OAImB7D,oBAAS,GAJ5B,mBAID8D,EAJC,KAIQC,EAJR,OAK0B/D,mBAAS,GALnC,mBAKD4C,EALC,KAKUoB,EALV,OAMsChE,mBAAS,GAN/C,mBAMDiE,EANC,KAMgBC,EANhB,OAOsClE,mBAAS,GAP/C,mBAODmE,EAPC,KAOgBC,EAPhB,OAQsCpE,mBAAS,MAR/C,mBAQDqE,EARC,KAQgBC,EARhB,OASsCtE,mBAAS,MAT/C,mBASDuE,EATC,KASgBC,EAThB,OAUwCxE,mBAAS,MAVjD,mBAUDyE,EAVC,KAUiBC,EAVjB,OAW0C1E,mBAAS,MAXnD,mBAWD6B,EAXC,KAWkB8C,EAXlB,KA2BFC,EAAY,WACRf,EAAUH,MAAM,GAAGC,KAAK,OACxBI,GAAQ,GACRW,EAAoB,OAI5B,GAtBmB,IAsBf9B,EACIqB,IAAoBE,GAEpBO,EAAoB,IACpBJ,EAAmB,QACnBE,EAAmB,QACnBT,GAAQ,GACRC,EAAa,OAERC,EAAkBE,GACvBG,EAAmB,UACnBP,GAAQ,GACRC,EAAa,MAEba,YAAW,WACPvF,EAASuD,EAAU/C,EAAS,eAC7B,MAEEqE,EAAkBF,IACvBO,EAAmB,UACnBT,GAAQ,GACRC,EAAa,MAEba,YAAW,WACPvF,EAASuD,EAAU/C,EAAS,eAC7B,WAIN,GAAkB,OAAd8C,QAGJ,GAAyB,OAArB6B,EAA2B,CAC1B,IAAAzB,EAAUY,EAAYkB,QACxBC,EAAehC,EAAgBC,GAD7B,EAE2C,OAAjB+B,EAAwB,CAAE3C,OAAQ,KAAMc,cAAe,MAAS6B,EAA1F3C,EAFA,EAEAA,OAAQc,GAFR,EAEQA,cAEd,GAAe,OAAXd,EACeY,EAAQgC,MAAK,SAAAC,GAAE,OAAW,OAAPA,OAG9BjB,EAAapB,EAAY,GACzB8B,EAAoB,QACpBC,EAAqB,MAChB/B,EAAY,IAlEV,GAmEHiC,YAAW,WACPD,MACD,WAIK,OAAXxC,IAEU,MAAXA,GACA4B,EAAapB,EAAY,GACzB8B,EAAoBtC,GACpBuC,EAAqBzB,IACrBgB,EAAmBD,EAAkB,GAChCrB,EAAY,IAhFV,GAiFHiC,YAAW,WACPD,MACD,MAIS,MAAXxC,IACL4B,EAAapB,EAAY,GACzB8B,EAAoBtC,GACpBuC,EAAqBzB,IACrBkB,EAAmBD,EAAkB,GAChCvB,EAAY,IA5FV,GA6FHiC,YAAW,WACPD,MACD,OAMnB,OACI,yBAAKzE,UAAU,QACX,kBAAC,EAAD,CAAgB3B,KAAMA,EAAKiB,MACvB2B,KAAM0C,EACNrC,SAAUwC,EACV9C,SAAUkD,EACVnD,YAAauD,IAEjB,kBAAC,EAAD,CAAO1C,QAAS,SAACW,GAAD,OA3GN,SAACA,GACL,IAAAM,EAAUY,EAAYkB,QACxBC,EAAehC,EAAgBC,IACD,OAAjB+B,EAAwB,CAAE3C,OAAQ,MAAS2C,GAAtD3C,QAEuB,OAAfY,EAAQN,IAA6B,OAAdE,IAGrCI,EAAQN,GAAKoB,EAAU,IAAM,IAC7BD,EAAUb,GACVe,GAASD,IAiGcoB,CAAYxC,IAC/BC,OAAQiB,EACRhB,UAAWA,EACXL,WAAY8B,EACZ7B,WAAY+B,EACZrD,YAAauD,EACb5C,kBAAmBA,IAEvB,kBAAC,EAAD,CAAgBrD,KAAMA,EAAKkB,MACvB0B,KAAM0C,EACNrC,SAAU0C,EACVhD,SAAUoD,EACVrD,YAAauD,M,MC/Id,SAASU,IACpB,IAAMlG,EAASwE,aAAY,SAAC5E,GAAD,OAAWA,EAAMI,OAAOR,UAC/CD,EAAOiF,aAAY,SAAC5E,GAAD,OAAWA,EAAMD,aAAaJ,QAIrD,OAHI4G,QAAQC,IAAI,SAAUpG,GAItB,yBAAKkB,UAAU,gBAAgBkB,MAAO,CAAEiE,OAAQ,MAAOC,MAAO,MAAOC,QAAS,SAC1E,yBAAKrF,UAAU,cAAckB,MAAO,CAAEoE,gBAAiB,UAAWH,OAAQ,OAAQI,aAAc,SAC5F,yBAAKvF,UAAU,UACX,yBAAKA,UAAU,WAAf,WAGA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,aACVlB,EAAO0G,eAEZ,yBAAKxF,UAAU,eAEkB,aAAzBlB,EAAO0G,cACH,6BAAMnH,EAAKiB,OAEX,6BAAMjB,EAAKkB,QAGvB,yBAAKS,UAAU,UAEkB,aAAzBlB,EAAO0G,cACH,kCAEA,uC,gBClB9BC,EAAQC,YAAYnH,EAAaoH,YAAgBC,MAEvD,SAASC,IACP,OACE,kBAAC,IAAD,CAAQC,SAAU/H,OAAOC,SAAS+H,UAAY,IAC5C,yBAAK/F,UAAU,aACb,4BAAQA,UAAU,YAChB,uCACA,sCACA,wCAEF,kBAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,IAAIC,UAAWrF,IACjC,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,QAAQC,UAAW7C,IACrC,kBAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,UAAUC,UAAWlB,MAM/CmB,IAASC,OACP,kBAAC,IAAD,CAAUX,MAAOA,GACf,kBAACI,EAAD,OAEFQ,SAASC,eAAe,SfyFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7B,QAAQ6B,MAAMA,EAAMC,c","file":"static/js/main.d4b029d4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const actionTypes = {\r\n    REGISTER_USER: 'USER_DETAILS_SAVE',\r\n    SAVE_RESULT: 'SAVE_RESULT',\r\n}\r\n\r\n","import { actionTypes } from '../constants/action-state-types';\r\n\r\nconst initialState = {\r\n    user: {}\r\n};\r\n\r\nexport const registerUser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.REGISTER_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { actionTypes } from '../constants/action-state-types';\r\n\r\nconst initialState = {\r\n    player: ''\r\n};\r\n\r\nexport const result = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SAVE_RESULT:\r\n            return {\r\n                ...state,\r\n                player: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { registerUser } from './registerUser';\r\nimport { result } from './result';\r\n\r\nexport const rootReducer = combineReducers({ registerUser, result });","import { actionTypes } from '../../constants/action-state-types';\r\n\r\nexport const addUser = (props, player1, player2) => {\r\n    return dispatch => {\r\n        let users = {\r\n            user1: player1,\r\n            user2: player2\r\n        };\r\n        dispatch(saveUsers(users));\r\n        props.push('/game');\r\n    };\r\n};\r\n\r\nexport function saveUsers(users) {\r\n    return {\r\n        type: actionTypes.REGISTER_USER,\r\n        payload: users\r\n    }\r\n};","import React, { useState } from 'react';\r\nimport { Button, Input } from 'reactstrap';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\n// Actions\r\nimport { addUser } from '../../actions/user/user-action';\r\n\r\n// css\r\nimport '../../css/user.css';\r\n\r\nfunction UserForm() {\r\n    const dispatch = useDispatch(),\r\n        history = useHistory(),\r\n        [player1, setPlayer1Value] = useState(''),\r\n        [player2, setPlayer2Value] = useState(''),\r\n\r\n        handleSubmit = e => {\r\n            e.preventDefault();\r\n            dispatch(addUser(history, player1, player2))\r\n        }\r\n\r\n    return (\r\n        <div className=\"user-form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"header-text\">\r\n                    Welcome to <span>TIC TAC TOE</span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div>PLAYER 1</div>\r\n                    <Input className=\"form-control\"\r\n                        name=\"player1\"\r\n                        id=\"p1\"\r\n                        placeholder=\"Player 1\"\r\n                        onChange={e => setPlayer1Value(e.target.value)} ></Input>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div>PLAYER 2</div>\r\n                    <Input className=\"form-control\"\r\n                        name=\"player2\"\r\n                        id=\"p2\"\r\n                        placeholder=\"Player 2\"\r\n                        onChange={e => setPlayer2Value(e.target.value)}></Input>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <Button className=\"btn btn-style btn-secondary btn-lg btn-block\"\r\n                        disabled={player1 === '' || player2 === ''}>\r\n                        Continue</Button>\r\n                </div>\r\n            </form>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UserForm;","import React from 'react';\n\n// import UserForm \nimport UserForm from './components/user/user-register';\n\n// css\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <UserForm></UserForm>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nfunction Player1Details(props) {\r\n    return (\r\n        <div>\r\n            {\r\n                props.winGameStep === 'RDAW' ?\r\n                    null\r\n                    :\r\n                    props.winState === null ?\r\n                        props.trun ?\r\n                            <div className=\"player1-turn-text\" style={{left: '13.5%' }}> Your Turn </div>\r\n                            :\r\n                            null\r\n                        :\r\n                        props.winState === 'DRAW' ?\r\n                            <div className=\"player1-turn-text\" style={{ color: '#ffffff', left: '14.5%' }} > DRAW </div>\r\n                            :\r\n                            props.winState === 'WINNER' ?\r\n                                <div className=\"player1-turn-text\" style={{left: '13.5%' }}> WINNER </div>\r\n                                :\r\n                                null\r\n            }\r\n\r\n            <div className=\"player1-stat\"\r\n                style={(props.winState === 'WINNER' || props.winState === 'DRAW') ? { border: '2px solid #fb9e01' } : null}>\r\n                <div className=\"player-head\">\r\n                    PLAYER 1\r\n                </div>\r\n                <div className=\"player-name\">\r\n                    {props.user}\r\n                </div>\r\n                <div className=\"player-symbol\">\r\n                    X\r\n            </div>\r\n            </div>\r\n            <div className=\"player1-win-count\">\r\n                <span className={props.winCount > 0 ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.winCount > 1 ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.winCount > 2 ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.winCount > 3 ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.winCount > 4 ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.winCount > 5 ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Player1Details;","import React from 'react';\r\n\r\nfunction Player2Details(props) {    \r\n    return (\r\n        <div>\r\n            {\r\n                props.winGameStep === 'DRAW' ?\r\n                    null\r\n                    :\r\n                    props.winState === null ?\r\n                        props.trun ?\r\n                            null\r\n                            :\r\n                            <div className=\"player2-turn-text\"> Your Turn </div>\r\n                        :\r\n                        props.winState === 'DRAW' ?\r\n                            <div className=\"player2-turn-text\" style={{ color: '#ffffff' }} > DRAW </div>\r\n                            :\r\n                            props.winState === 'WINNER' ?\r\n                                <div className=\"player2-turn-text\"> WINNER </div>\r\n                                :\r\n                                null\r\n            }\r\n            <div className=\"player2-stat\"\r\n                style={(props.winState === 'WINNER' || props.winState === 'DRAW') ? { border: '2px solid #fb9e01' } : null}>\r\n                <div className=\"player-head\">\r\n                    PLAYER 2\r\n                </div>\r\n                <div className=\"player-name\">\r\n                    {props.user}\r\n                </div>\r\n                <div className=\"player-symbol\">\r\n                    O\r\n                </div>\r\n            </div>\r\n            <div className=\"player2-win-count\">\r\n                <span className={props.winCount > 0 ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.winCount > 1 ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.winCount > 2 ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.winCount > 3 ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.winCount > 4 ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.winCount > 5 ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player2Details;","import React from 'react'\n\nexport default function Square(props) {    \n    const matrix = props.gameStepWinMatrix === null ? [] : props.gameStepWinMatrix,\n        id = props.idx;\n    return (\n        <button className=\"square\"\n            onClick={props.onClick}\n            style={id === 0 ? { borderTopLeftRadius: '25px' }\n                : id === 2 ? { borderTopRightRadius: '25px' }\n                    : id === 6 ? { borderBottomLeftRadius: '25px' }\n                        : id === 8 ? { borderBottomRightRadius: '25px' }\n                            : null}>\n            {\n                (props.winner === 'X' || props.winnerGameStep === 'X') && props.value === 'X' &&\n                    (id === matrix[0] || id === matrix[1] || id === matrix[2]) ?\n                    <span style={{ color: '#fb9e01' }}>{props.value} </span>\n                    :\n                    (props.winner === 'O' || props.winnerGameStep === 'O') && props.value === 'O' &&\n                        (id === matrix[0] || id === matrix[1] || id === matrix[2]) ?\n                        <span style={{ color: '#fb9e01' }}>{props.value} </span>\n                        :\n                        <span >{props.value} </span>\n            }\n\n        </button>\n    )\n}\n","import React from 'react';\r\n\r\n\r\n// import custom components\r\nimport Square from './Square';\r\n\r\n//import css\r\nimport \"../../css/board.css\";\r\n\r\nfunction Board(props) {    \r\n    const winner = props.winStateP1 === 'WINNER' ? 'X' : props.winStateP2 === 'WINNER' ? 'O' : null,\r\n        winnerGameStep = props.winGameStep,\r\n        renderSquare = (i) => {\r\n            return <Square\r\n                idx={i}\r\n                value={props.squres[i]}\r\n                onClick={() => props.onClick(i)}\r\n                winner={winner}\r\n                winnerGameStep={winnerGameStep}\r\n                gameStepWinMatrix={props.gameStepWinMatrix}>\r\n            </Square >\r\n        }\r\n\r\n    return (\r\n        <div className=\"square-matrix\">\r\n            <div className=\"square-bord\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4\">\r\n                        {renderSquare(0)}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        {renderSquare(1)}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        {renderSquare(2)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4\">\r\n                        {renderSquare(3)}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        {renderSquare(4)}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        {renderSquare(5)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4\">\r\n                        {renderSquare(6)}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        {renderSquare(7)}\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        {renderSquare(8)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"game-count-panel\">\r\n                <span className={props.gameCount > 0 || props.gameCount === null ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.gameCount > 1 || props.gameCount === null ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.gameCount > 2 || props.gameCount === null ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.gameCount > 3 || props.gameCount === null ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.gameCount > 4 || props.gameCount === null ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n                <span className={props.gameCount > 5 || props.gameCount === null ? \"win-count-on\" : \"win-count-off\"}>&#8226;</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;\r\n","import { actionTypes } from '../../constants/action-state-types';\r\n\r\nexport const setResult = (props, result) => {\r\n    return dispatch => {\r\n        let player = result;\r\n        dispatch(saveResult(player));\r\n        props.push('/result');\r\n    };\r\n};\r\n\r\nexport function saveResult(player) {\r\n    return {\r\n        type: actionTypes.SAVE_RESULT,\r\n        payload: player\r\n    }\r\n};","import React, { useState } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\n// custom component\r\nimport Player1Details from './player1-details';\r\nimport Player2Details from './player2-details';\r\nimport Board from '../board/bord';\r\n\r\n// import actions\r\nimport { setResult } from '../../actions/result/result-action';\r\n\r\n// css\r\nimport '../../css/game.css'\r\n\r\nfunction Game() {\r\n    const user = useSelector((state) => state.registerUser.user),\r\n        dispatch = useDispatch(),\r\n        history = useHistory(),\r\n        [boardMatrix, setMetrix] = useState(Array(9).fill(null)),\r\n        [isXNext, setNext] = useState(true),\r\n        [gameCount, setGameCount] = useState(0),\r\n        [player1winCount, setPlayer1WinCount] = useState(0),\r\n        [player2winCount, setPlayer2WinCount] = useState(0),\r\n        [player1WinState, setPlayer1WinState] = useState(null),\r\n        [player2WinState, setPlayer2WinState] = useState(null),\r\n        [gameStepWinState, setGameStepWinState] = useState(null),\r\n        [gameStepWinMatrix, setGameStepWinMatrix] = useState(null),\r\n        maxGameCount = 6,\r\n\r\n        handleClick = (i) => {\r\n            const squares = boardMatrix.slice(),\r\n                winnerResult = calculateWinner(squares),\r\n                { winner } = winnerResult === null ? { winner: null } : winnerResult;\r\n            // chek for not rep \r\n            if (winner || squares[i] !== null || gameCount === null) {\r\n                return\r\n            }\r\n            squares[i] = isXNext ? 'X' : 'O';\r\n            setMetrix(squares);\r\n            setNext(!isXNext);\r\n        },\r\n\r\n        clearGame = () => {\r\n            setMetrix(Array(9).fill(null));\r\n            setNext(true);\r\n            setGameStepWinState(null)\r\n        }\r\n\r\n    // check if there is a winner with best of 6 (maxGameCount)\r\n    if (gameCount === maxGameCount) {\r\n        if (player1winCount === player2winCount) {\r\n            // navigate \r\n            setGameStepWinState('');\r\n            setPlayer1WinState(\"DRAW\");\r\n            setPlayer2WinState(\"DRAW\");\r\n            setNext(true);\r\n            setGameCount(null);\r\n        }\r\n        else if (player1winCount > player2winCount) {\r\n            setPlayer1WinState(\"WINNER\");\r\n            setNext(true);\r\n            setGameCount(null);\r\n            // navigate to Winner Page\r\n            setTimeout(() => {\r\n                dispatch(setResult(history, 'player 1'));\r\n            }, 2000);\r\n        }\r\n        else if (player2winCount > player1winCount) {\r\n            setPlayer2WinState(\"WINNER\");\r\n            setNext(true);\r\n            setGameCount(null);\r\n            // navigate to Winner Page\r\n            setTimeout(() => {\r\n                dispatch(setResult(history, 'player 2'));\r\n            }, 2000);\r\n        }\r\n    }\r\n    // freez the game \r\n    else if (gameCount === null) {\r\n\r\n    }\r\n    else if (gameStepWinState === null) {\r\n        const squares = boardMatrix.slice(),\r\n            winnerResult = calculateWinner(squares),\r\n            { winner, matchedMatrix } = winnerResult === null ? { winner: null, matchedMatrix: null } : winnerResult;\r\n\r\n        if (winner === null) {\r\n            const result = squares.some(el => el === null);\r\n            // Draw case\r\n            if (!result) {\r\n                setGameCount(gameCount + 1);\r\n                setGameStepWinState('DRAW');\r\n                setGameStepWinMatrix(null);\r\n                if ((gameCount + 1) !== maxGameCount) {\r\n                    setTimeout(() => {\r\n                        clearGame();\r\n                    }, 3000);\r\n                }\r\n            }\r\n        }\r\n        else if (winner !== null) {\r\n            // Player 1 - win case\r\n            if (winner === 'X') {\r\n                setGameCount(gameCount + 1)\r\n                setGameStepWinState(winner);\r\n                setGameStepWinMatrix(matchedMatrix);\r\n                setPlayer1WinCount(player1winCount + 1);\r\n                if ((gameCount + 1) !== maxGameCount) {\r\n                    setTimeout(() => {\r\n                        clearGame();\r\n                    }, 3000);\r\n                }\r\n            }\r\n            // player 2 win case\r\n            else if (winner === 'O') {\r\n                setGameCount(gameCount + 1)\r\n                setGameStepWinState(winner);\r\n                setGameStepWinMatrix(matchedMatrix);\r\n                setPlayer2WinCount(player2winCount + 1);\r\n                if ((gameCount + 1) !== maxGameCount) {\r\n                    setTimeout(() => {\r\n                        clearGame();\r\n                    }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <Player1Details user={user.user1}\r\n                trun={isXNext}\r\n                winCount={player1winCount}\r\n                winState={player1WinState}\r\n                winGameStep={gameStepWinState}>\r\n            </Player1Details>\r\n            <Board onClick={(i) => handleClick(i)}\r\n                squres={boardMatrix}\r\n                gameCount={gameCount}\r\n                winStateP1={player1WinState}\r\n                winStateP2={player2WinState}\r\n                winGameStep={gameStepWinState}\r\n                gameStepWinMatrix={gameStepWinMatrix}>\r\n            </Board>\r\n            <Player2Details user={user.user2}\r\n                trun={isXNext}\r\n                winCount={player2winCount}\r\n                winState={player2WinState}\r\n                winGameStep={gameStepWinState}>\r\n            </Player2Details>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n// | 0 | 1 | 2 |\r\n// | 3 | 4 | 5 |\r\n// | 6 | 7 | 8 |\r\n\r\nfunction calculateWinner(squares) {\r\n    let returnObj = {\r\n        winner: '',\r\n        matchedMatrix: []\r\n    }\r\n    const matchMatrix = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n\r\n    for (let i = 0; i < matchMatrix.length; i++) {\r\n        const [el1, el2, el3] = matchMatrix[i];\r\n        if (squares[el1] && squares[el1] === squares[el2] && squares[el2] === squares[el3]) {\r\n            returnObj.winner = squares[el1];\r\n            returnObj.matchedMatrix = matchMatrix[i];\r\n            return returnObj;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Game;","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\n// import css\r\nimport \"../../css/board.css\";\r\nimport \"../../css/result.css\";\r\n\r\nexport default function Result() {\r\n    const result = useSelector((state) => state.result.player),\r\n        user = useSelector((state) => state.registerUser.user);\r\n        console.log(\"result\", result);\r\n        \r\n\r\n    return (\r\n        <div className=\"square-matrix\" style={{ height: \"40%\", width: \"20%\", padding: '12px' }}>\r\n            <div className=\"square-bord\" style={{ backgroundColor: '#253952', height: '36vh', borderRadius: '36px' }}>\r\n                <div className=\"result\">\r\n                    <div className=\"caption\">\r\n                        WINNER!\r\n                    </div>\r\n                    <div className=\"center-box\">\r\n                        <div className=\"player-id\">\r\n                            {result.toUpperCase()}\r\n                        </div>\r\n                        <div className=\"player-name\">\r\n                            {\r\n                                result.toUpperCase() === \"PLAYER 1\" ?\r\n                                    <div>{user.user1}</div>\r\n                                    :\r\n                                    <div>{user.user2}</div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"symbol\">\r\n                            {\r\n                                result.toUpperCase() === \"PLAYER 1\" ?\r\n                                    <div>X</div>\r\n                                    :\r\n                                    <div>O</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers/index';\n\n// Custom components \nimport App from './App';\nimport Game from './components/game/game';\nimport Result from './components/result/game-result';\n\n// import css\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nfunction AppContainer() {\n  return (\n    <Router basename={window.location.pathname || ''}>\n      <div className=\"home-page\">\n        <header className=\"app-text\">\n          <div>T I C </div>\n          <div>T A C</div>\n          <div>T O E </div>\n        </header>\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/game\" component={Game} />\n        <Route exact path=\"/result\" component={Result} />\n      </div>\n    </Router >\n  )\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}